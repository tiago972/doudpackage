for (j in 1:10)
{
print(paste("***** ",var.expl[j], " ****"))
res<-lm(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
print(summary(res))
}
}
res$coefficients
res$coefficients
colnames(res)
names(res)
res$coefficients[1]
res$coefficients[2]
res2<-res$coefficients
summary(res2)
res2
summary(res)
summary(res)[2]
summary(res)[["coefficients"]][, "t value"]
for (i in 1:4)
{
print(paste("***** ",var.a_expl[i], " ****"))
for (j in 1:10)
{
print(paste("***** ",var.expl[j], " ****"))
res<-lm(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
print(paste("coef: ", res$coefficients, "p value: "), summary(res)[["coefficients"]][, "t value"])
}
}
for (i in 1:4)
{
print(paste("***** ",var.a_expl[i], " ****"))
for (j in 1:10)
{
print(paste("***** ",var.expl[j], " ****"))
res<-lm(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
print(paste("coef: ", res$coefficients, "p value: ", summary(res)[["coefficients"]][, "t value"]))
}
}
for (i in 1:4)
{
print(paste("***** ",var.a_expl[i], " ****"))
for (j in 1:10)
{
print(paste("***** ",var.expl[j], " ****"))
res<-lm(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
print(paste("coef: ", res$coefficients, "p value: ", summary(res)[["coefficients"]][, "t value"]))
}
}
library(gtsummary)
res %>% tbl_regression(exponentiate = T)
res %>% tbl_regression(exponentiate = F)
summary(res)
?tbl_regression
res %>% tbl_regression(exponentiate = F, label = list(var.a_expl[4]~var.expl[2]))
res %>% tbl_regression(exponentiate = F, label = list(bdd.3[, var.expl[j]]~var.expl[4]))
res %>% tbl_regression(exponentiate = F, label = list(bdd.3[, var.expl[j]]~"var.expl[4]"))
library(labelled)
val_label(res$coefficients[2], "test")
val_label(res$coefficients[2], "")
res$coefficients
val_label(res$coefficients[2], "bdd.3[, var.expl[j]]")<-"FUCK"
val_label(res, "bdd.3[, var.expl[j]]")<-"FUCK"
val_label(summary(res), "bdd.3[, var.expl[j]]")<-"FUCK"
val_label(coef(res)), "bdd.3[, var.expl[j]]")<-"FUCK"
coef(res)
val_label(coef(res)), "bdd.3[, var.expl[j]]1")<-"FUCK"
val_label(res, "bdd.3[, var.expl[j]]1")<-"FUCK"
library(pander)
install.packages("pander")
library(pandoc)
library(pander)
?pandoc.p
setwd("/Users/Tiago/Desktop/BF is cool/Judith Breth")
bdd<-read.csv2("base_JB.2.csv")
library(lubridate)
library(tidyverse)
library(doudpackage)
summary(bdd)
for (i  in 1:ncol(bdd)){
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))}
if (nlevels(bdd[,i]) >= 30 && colnames(bdd)[i]!="TTT" &&
colnames(bdd)[i]!="TOX.NON.HEMATO" && colnames(bdd)[i]!="IPP" &&
colnames(bdd)[i]!="NOM" && colnames(bdd)[i]!="PRENOM"){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 2)
{
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd$TUMEUR)
bdd$STADE<-as.factor(gsub("local.*", "localisee", ignore.case = TRUE, bdd$STADE))
bdd$STADE<-as.factor(gsub("meta.*", "matastatique", ignore.case = TRUE, bdd$STADE))
levels(bdd$STADE)[levels(bdd$STADE)==""]<-NA
summary(bdd$STADE)
summary(bdd)
summary(bdd$TTT)
bdd$TTT<-as.factor(str_to_lower(as.character(bdd$TTT)))
bdd$TTT<-as.factor(str_trim(as.character(bdd$TTT)))
levels(bdd$TTT)[levels(bdd$TTT)=="letrozole  palbociclib"]<-"letrozole palbociclib"
bdd$LDV_dep_PEC<-as.factor(as.character(str_trim(bdd$LDV_dep_PEC)))
levels(bdd$LDV_dep_PEC)[levels(bdd$LDV_dep_PEC)=="appartmement"]<-"appartement"
bdd$iADL<-as.numeric(as.character(bdd$iADL))
bdd$DENUTRITION<-as.factor(str_trim(as.character(bdd$DENUTRITION)))
levels(bdd$DENUTRITION)[levels(bdd$DENUTRITION)=="DM"]<-NA
levels(bdd$DC.a.6mois)[levels(bdd$DC.a.6mois)=="DM "]<-NA
bdd$Changement.de.lieu.de.vie<-as.factor(str_trim(as.character(bdd$Changement.de.lieu.de.vie)))
levels(bdd$Progression)[levels(bdd$Progression)=="DM"]<-NA
bdd<-rename(bdd, "ARR_TOX_CHIMIO"=ARRET.sur.TOX)
levels(bdd$ARR_TOX_CHIMIO)[levels(bdd$ARR_TOX_CHIMIO)=="0 (toxicite radiotherapie) "]<-"0"
bdd$REDUCTION.DOSE...pause<-as.factor(str_trim(as.character(bdd$REDUCTION.DOSE...pause)))
levels(bdd$REDUCTION.DOSE...pause)
bdd$REDUCTION.DOSE...pause<-as.factor(gsub(".*pause.*", "pause", bdd$REDUCTION.DOSE...pause))
bdd$REDUCTION.DOSE...pause<-as.factor(gsub(".*reduction.*", "reduction", bdd$REDUCTION.DOSE...pause))
bdd$REDUCTION.DOSE...pause<-as.factor(gsub(".*arret.*", "arret", bdd$REDUCTION.DOSE...pause))
bdd$TOX.NON.HEMATO<-gsub(".*3.*", "3", bdd$TOX.NON.HEMATO)
bdd$TOX.NON.HEMATO<-gsub(".*2.*", "2", bdd$TOX.NON.HEMATO)
bdd$TOX.NON.HEMATO<-gsub(".*1.*", "1", bdd$TOX.NON.HEMATO)
bdd$TOX.NON.HEMATO<-as.factor(bdd$TOX.NON.HEMATO)
levels(bdd$TOX.NON.HEMATO)[levels(bdd$TOX.NON.HEMATO)=="OMI syndrome de permeabilite capillaire au gemzar "]<-"0"
levels(bdd$TOX.NON.HEMATO)[levels(bdd$TOX.NON.HEMATO)=="douleur thoracique"]<-"0"
levels(bdd$TOX.NON.HEMATO)[levels(bdd$TOX.NON.HEMATO)=="reaction anaphylactoide"]<-"0"
levels(bdd$TOX.NON.HEMATO)[levels(bdd$TOX.NON.HEMATO)==""]<-NA
bdd<-bdd[,-which(colnames(bdd)=="PRENOM")]
cat("\014")
summary(bdd)
bdd<-rename(bdd, "Date.RCP" = X)
### Mergine des bases
bdd.2<-read.csv2('base_JB.4.csv')
summary(bdd.2)
colnames(bdd.2)[3]<-"NOM"
summary(bdd.2)
cat("\014")
for (i  in 1:ncol(bdd.2)){
if(is.character(bdd.2[,i])){
print(paste("to factor: ", colnames(bdd.2)[i]))
bdd.2[,i]<-as.factor(as.character(bdd.2[,i]))
}
if (is.numeric(bdd.2[,i]) && mean(bdd.2[,i], na.rm = TRUE) <= 2)
{
print(paste("to factor: ", colnames(bdd.2)[i]))
bdd.2[,i]<-as.factor(as.character(bdd.2[,i]))
}
if (colnames(bdd.2)[i]!="Scanner.AVANT" && colnames(bdd.2)[i]!="Scanner.Apres" &&
colnames(bdd.2)[i]!="Date.RCP" && colnames(bdd.2)[i]!="IPP" && colnames(bdd.2)[i]!="NOM")
{
print(paste("to num: ", colnames(bdd.2)[i]))
bdd.2[,i]<-as.numeric(as.character(bdd.2[,i]))
}
if (colnames(bdd.2)[i]=="Date.RCP" || colnames(bdd.2)[i]=="Scanner.AVANT" || colnames(bdd.2)[i]=="Scanner.Apres")
{
print(paste("to date: ", colnames(bdd.2)[i]))
bdd.2[,i]<-as.Date(bdd.2[,i], "%d/%m/%Y")
}
}
cat("\014")
summary(bdd.2)
bdd.3<-merge(bdd, bdd.2, all = T)
for (i in 1:ncol(bdd.3))
{
if (is.factor(bdd.3[,i]))
levels(bdd.3[,i])[levels(bdd.3[,i])=="DM"]<-NA
}
bdd.3<-filter(bdd.3, bdd.3$IPP!="8002364602", bdd.3$Date.RCP!="11/10/2018")
cat("\014")
bdd.3<-bdd.3[,!names(bdd.3) %in% c("TTT", "TUMEUR", "IPP", "NOM")]
summary(bdd.3)
bdd.3$ADL<-as.numeric(as.character(bdd.3$ADL))
biv<-ft_ana_biv(bdd.3, "DC.a.6mois", signi = 0.20)
library(psy)
var<-biv$var[order(biv$p)][1:31]
acp_exp.1<-c(biv$var[order(biv$p)][1:10])
# fpca(data=bdd.3, y="DC.a.6mois", x=acp_exp.1)
acp_exp.1
acp_exp.2<-c(biv$var[order(biv$p)][11:20])
# fpca(data=bdd.3, y="DC.a.6mois", x=acp_exp.2)
acp_exp.2
acp_exp.3<-c(biv$var[order(biv$p)][21:31])
# fpca(data=bdd.3, y="DC.a.6mois", x=acp_exp.3)
acp_exp.3
sort(colnames(bdd.3))
var.expl<-c("ANEMIE", "THROMBOPENIE", "NEUTROPENIE", "TOX.NON.HEMATO", "ARR_TOX_CHIMIO", "REDUCTION.DOSE...pause",
"HOSPIT.NON.PROG", "HOSPIT.PROG", "CHUTE", "Progression")
var.a_expl<-c("SAT", "VAT1.VAT2", "Muscles.SAT.VAT", "Muscles.SAT")
for (i in 1:4)
{
print(paste("***** ",var.a_expl[i], " ****"))
for (j in 1:10)
{
print(paste("***** ",var.expl[j], " ****"))
res<-lm(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
}
}
res$coefficients
summary(res[["coefficients"]][,"t value"])
summary(res)[["coefficients"]][,"t value"]
?t.test
t.tes(bdd.3$SAT~bdd.3$ANEMIE)
t.test(bdd.3$SAT~bdd.3$ANEMIE)
t.test(bdd.3$SAT, bdd.3$ANEMIE)
t.test(bdd.3$SAT)
t.test(bdd.3$SAT~bdd.3$ANEMIE)
t.test(bdd.3$SAT, bdd.3$ANEMIE)
t.test(bdd.3$ANEMIE, bdd.3$SAT)
t.test(x = bdd.3$ANEMIE, y = bdd.3$SAT)
apply(bdd.3$SAT, bdd.3$ANEMIE, t.test)
tapply(bdd.3$SAT, bdd.3$ANEMIE, t.test)
aov(bdd.3$SAT~bdd.3$ANEMIE)
aov(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
summary(aov(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]]))
cor.test(bdd.3[,var.a_expl[i]], bdd.3[,var.expl[1]])
cor.test(bdd.3[,var.a_expl[i]], bdd.3[,var.expl[2]])
cor.test(bdd.3[,var.a_expl[i]], bdd.3[,var.expl[3]])
cor.test(bdd.3[,var.a_expl[2]], bdd.3[,var.expl[3]])
cor.test(bdd.3[,var.a_expl[1]], bdd.3[,var.expl[3]])
cor.test(bdd.3$SAT, bdd.3$ANEMIE)
cor.test(bdd.3$SAT, bdd.3$THROMBOPENIE)
summary(bdd.3$SAT)
?cor.test
cor.test(bdd.3$SAT, bdd.3$THROMBOPENIE)
<-aov(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
a<-aov(bdd.3[,var.a_expl[i]]~bdd.3[,var.expl[j]])
a<-as.data.frame(a)
a<-as.data.frame(summary(a))
a
summary(a)
setwd("/Users/Tiago/Desktop/BF is cool/Jill")
library(tidyverse)
library(lubridate)
library(gtsummary)
library(doudpackage)
library(forestplot)
bdd<-read.csv2("bdd_jill.csv")
summary(bdd)
for (i  in 1:ncol(bdd)){
if (is.character(bdd[,i]) && any(grep("/", bdd[,i]))){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")
}
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(bdd[,i])}
if (is.factor(bdd[,i]) && nlevels(bdd[,i])>=15)
{
print(paste("from factor to int", colnames(bdd)[i]))
bdd[,i]<-as.numeric(as.character(bdd[,i]))
}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 3)
{
print(paste("from int to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd)
levels(bdd$BPCO)[levels(bdd$BPCO)=="?"]<-NA
levels(bdd$BPCO)[levels(bdd$BPCO)==""]<-NA
levels(bdd$Alcool..0.1.)[levels(bdd$Alcool..0.1.)=="?"]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)==""]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)=="?"]<-NA
levels(bdd$Anosmie..0.1.)[levels(bdd$Anosmie..0.1.)=="?"]<-NA
levels(bdd$Agueusie..0.1.)[levels(bdd$Agueusie..0.1.)=="?"]<-NA
colnames(bdd)
bdd_subset<-select(bdd, Date.d.entrée.UGA..JJ.MM.AA., Date.sortie.UGA..JJ.MM.AA., Age..ans., sexe.0.f.1.h,
Prov.autre.service..type.service.SAU..etc..., Alcool..0.1., Tabac..PA., Chutes.répétition...0.1., Poids..Kg.,
IMC, Charlson.pondéré, ADL6, institution..0.1., Nbe.total.de.molécules, Nosocomial..0.1.,
Type.imagerie..TDM..0.Radio.1., ACFA.parox...0.1., SCA..0.1., OAP..0.1.,
T.vigilance..Glagow...14...0.1., MTEV..0.1.,  Hémorragie..0.1., Transfusion..0.1.,
IRénaleA..0.1., "Fécalome..0.1.", Escarre..0.1., Globe..0.1.,
qSOFA.Max, Antibiothérapie.initiale, Leuco.MAX, Leuco.min, PNN.MAX, PNN.min,
PNE.Max, PNE.Min, Lympho.Max, Lympho.Min, Hb.MAX, Hb.min,
Plqt.MAX, Plqt.min, Cytolyse..0.1., Cholestase..0.1.,
DMS.UGA.covid, décès..0.1., RAD, SSR, Autre..hors.décès.)
bdd_subset$Tabac..PA.<-as.numeric(bdd_subset$Tabac..PA.)
bdd_subset$Prov.autre.service..type.service.SAU..etc...<-as.factor(bdd_subset$Prov.autre.service..type.service.SAU..etc...)
summary(bdd_subset)
## A preciser en commentaire que j ai considere les vides commes 0 ###
levels(bdd_subset$Antibiothérapie.initiale)[1]<-0
bdd_subset$Antibiothérapie.initiale<-as.character(bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-ifelse(bdd_subset$Antibiothérapie.initiale!="0", "1", bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-as.factor(bdd_subset$Antibiothérapie.initiale)
bdd_subset$devenir<-as.factor(ifelse(bdd_subset$décès..0.1.==1, "décès",
ifelse(bdd_subset$RAD==1, "RAD",
ifelse(bdd_subset$SSR==1, "SSR", "autre"))))
for (i in 1:ncol(bdd_subset))
{
if (is.factor(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "facteur i= ", i))
else if (is.numeric(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "numeric i= ", i))
else
print(paste(colnames(bdd_subset)[i], "a determiner i= ", i))
}
bdd_subset$PNE.Max<-as.numeric(as.character(bdd_subset$PNE.Max))
bdd_subset$PNE.Min<-as.numeric(as.character(bdd_subset$PNE.Min))
bdd_subset$Lympho.Max<-as.numeric(as.character(bdd_subset$Lympho.Max))
bdd_subset$Lympho.Min<-as.numeric(as.character(bdd_subset$Lympho.Min))
summary(bdd_subset$PNE.Min)
summary(bdd_subset$PNE.Max)
table(bdd_subset$PNE.Min<0.2)
summary(bdd_subset$Leuco.MAX)
bdd_subset$Leuco.MAX<-as.character(as.numeric(bdd_subset$Leuco.MAX))
summary(bdd_subset$Lympho.Min)
summary(bdd_subset$PNN.MAX)
bdd_subset$PNN.MAX<-as.character(as.numeric(bdd_subset$PNN.MAX))
bdd_subset$eosinopenie_pnn.1<-as.factor(ifelse(bdd_subset$PNE.Min < 0.5 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$eosinopenie_pnn.2<-as.factor(ifelse(bdd_subset$PNE.Min < 0.04 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali<-as.factor(ifelse(bdd_subset$PNE.Min<0.04, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.2<-as.factor(ifelse(bdd_subset$PNE.Min<0.01, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$ADL6<-as.numeric(as.character(bdd_subset$ADL6))
### Analyse univariee ###
uni<-ft_desc_tab(bdd_subset, na.print = T)
### Analyse bivariee ###
ana_biv<-ft_ana_biv(bdd_subset, "décès..0.1.")
## Ana desc ##
ana_desc<-ft_desc_tab(bdd_subset, "décès..0.1.")
## Regression ###
colnames(bdd_subset)
summary(bdd_subset$décès..0.1.)
### Determination des seuils pour ADL & charlson & cut-off PNE
library(DescTools)
summary(bdd_subset$ADL6)
bdd_subset$ADL6_quali1<-as.factor(ifelse(bdd_subset$ADL6<=3, 0, 1))
reg_adl1<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali1, family = "binomial")
bdd_subset$ADL6_quali2<-as.factor(ifelse(bdd_subset$ADL6<=2, 0, 1))
reg_adl2<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali2, family = "binomial")
Cstat(x= predict(reg_adl1, type="response"),
resp = model.response((model.frame(reg_adl1))))
Cstat(x= predict(reg_adl2, type="response"),
resp = model.response((model.frame(reg_adl2))))
# Choix sur <=2
summary(bdd_subset$Charlson.pondéré)
bdd_subset$charlson_quali1<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=4, 0, 1))
bdd_subset$charlson_quali2<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=5, 0, 1))
reg_charlson1<-glm(bdd_subset$décès..0.1.~bdd_subset$charlson_quali1, family = "binomial")
reg_charlson2<-glm(bdd_subset$décès..0.1.~bdd_subset$charlson_quali2, family = "binomial")
Cstat(x= predict(reg_charlson1, type="response"),
resp = model.response((model.frame(reg_charlson1))))
Cstat(x= predict(reg_charlson2, type="response"),
resp = model.response((model.frame(reg_charlson2))))
#Choix sur <=5
bdd_reg<-select(bdd_subset, Age..ans., sexe.0.f.1.h,
eosinopenie_pnn.1,charlson_quali2, ADL6_quali2, décès..0.1.)
bdd_reg<-bdd_reg[complete.cases(bdd_reg),]
summary(bdd_reg$décès..0.1.)
## OR non ajuste
reg_uni <- glm(décès..0.1.~eosinopenie_pnn.1, family = "binomial", data=bdd_subset)
reg_uni %>% tbl_regression(exponentiate = T)
## OR ajuste
reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.1+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
exp(coef(reg))
exp(confint(reg))
reg %>% tbl_regression(exponentiate = T)
### Test PNN seuls en reg
reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNN.MAX+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
##
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNE.Min+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
View(ana_biv)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNE_quali+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.3+ADL6_quali2,
family = "binomial", data=bdd_subset)
bdd_subset$PNE_quali.3<-as.factor(ifelse(bdd_subset$PNE.Min<0.04 & bdd_subset$PNN.MAX > 7, 1, ifelse(is.na(bdd_subset$PNE.Min)
| is.na(bdd_subset$PNE.Max), NA, 0)))
summary(bdd_subset$PNE_quali.3)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.3+ADL6_quali2,
family = "binomial", data=bdd_subset)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNE_quali.3+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNE_quali+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.rapport+ADL6_quali2,
family = "binomial", data=bdd_subset)
#### Var PNN/PNE
bdd_subset$eosinopenie_pnn.rapport<-as.numeric(as.character(bdd_subset$PNE.Min/bdd_subset$PNN.MAX))
#### Var PNN/PNE
bdd_subset$eosinopenie_pnn.rapport<-as.numeric(as.character(bdd_subset$PNE.Min/bdd_subset$PNN.MAX))
summary(bdd_subset$eosinopenie_pnn.rapport)
summary(bdd_subset$ADL6)
bdd_subset$ADL6_quali1<-as.factor(ifelse(bdd_subset$ADL6<=3, 0, 1))
reg_adl1<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali1, family = "binomial")
bdd_subset$ADL6_quali2<-as.factor(ifelse(bdd_subset$ADL6<=2, 0, 1))
reg_adl2<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali2, family = "binomial")
setwd("/Users/Tiago/Desktop/BF is cool/Jill")
library(tidyverse)
library(lubridate)
library(gtsummary)
library(doudpackage)
library(forestplot)
bdd<-read.csv2("bdd_jill.csv")
summary(bdd)
for (i  in 1:ncol(bdd)){
if (is.character(bdd[,i]) && any(grep("/", bdd[,i]))){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")
}
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(bdd[,i])}
if (is.factor(bdd[,i]) && nlevels(bdd[,i])>=15)
{
print(paste("from factor to int", colnames(bdd)[i]))
bdd[,i]<-as.numeric(as.character(bdd[,i]))
}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 3)
{
print(paste("from int to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd)
levels(bdd$BPCO)[levels(bdd$BPCO)=="?"]<-NA
levels(bdd$BPCO)[levels(bdd$BPCO)==""]<-NA
levels(bdd$Alcool..0.1.)[levels(bdd$Alcool..0.1.)=="?"]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)==""]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)=="?"]<-NA
levels(bdd$Anosmie..0.1.)[levels(bdd$Anosmie..0.1.)=="?"]<-NA
levels(bdd$Agueusie..0.1.)[levels(bdd$Agueusie..0.1.)=="?"]<-NA
colnames(bdd)
bdd_subset<-select(bdd, Date.d.entrée.UGA..JJ.MM.AA., Date.sortie.UGA..JJ.MM.AA., Age..ans., sexe.0.f.1.h,
Prov.autre.service..type.service.SAU..etc..., Alcool..0.1., Tabac..PA., Chutes.répétition...0.1., Poids..Kg.,
IMC, Charlson.pondéré, ADL6, institution..0.1., Nbe.total.de.molécules, Nosocomial..0.1.,
Type.imagerie..TDM..0.Radio.1., ACFA.parox...0.1., SCA..0.1., OAP..0.1.,
T.vigilance..Glagow...14...0.1., MTEV..0.1.,  Hémorragie..0.1., Transfusion..0.1.,
IRénaleA..0.1., "Fécalome..0.1.", Escarre..0.1., Globe..0.1.,
qSOFA.Max, Antibiothérapie.initiale, Leuco.MAX, Leuco.min, PNN.MAX, PNN.min,
PNE.Max, PNE.Min, Lympho.Max, Lympho.Min, Hb.MAX, Hb.min,
Plqt.MAX, Plqt.min, Cytolyse..0.1., Cholestase..0.1.,
DMS.UGA.covid, décès..0.1., RAD, SSR, Autre..hors.décès.)
bdd_subset$Tabac..PA.<-as.numeric(bdd_subset$Tabac..PA.)
bdd_subset$Prov.autre.service..type.service.SAU..etc...<-as.factor(bdd_subset$Prov.autre.service..type.service.SAU..etc...)
summary(bdd_subset)
## A preciser en commentaire que j ai considere les vides commes 0 ###
levels(bdd_subset$Antibiothérapie.initiale)[1]<-0
bdd_subset$Antibiothérapie.initiale<-as.character(bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-ifelse(bdd_subset$Antibiothérapie.initiale!="0", "1", bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-as.factor(bdd_subset$Antibiothérapie.initiale)
bdd_subset$devenir<-as.factor(ifelse(bdd_subset$décès..0.1.==1, "décès",
ifelse(bdd_subset$RAD==1, "RAD",
ifelse(bdd_subset$SSR==1, "SSR", "autre"))))
for (i in 1:ncol(bdd_subset))
{
if (is.factor(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "facteur i= ", i))
else if (is.numeric(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "numeric i= ", i))
else
print(paste(colnames(bdd_subset)[i], "a determiner i= ", i))
}
bdd_subset$PNE.Max<-as.numeric(as.character(bdd_subset$PNE.Max))
bdd_subset$PNE.Min<-as.numeric(as.character(bdd_subset$PNE.Min))
bdd_subset$Lympho.Max<-as.numeric(as.character(bdd_subset$Lympho.Max))
bdd_subset$Lympho.Min<-as.numeric(as.character(bdd_subset$Lympho.Min))
summary(bdd_subset$PNE.Min)
summary(bdd_subset$PNE.Max)
table(bdd_subset$PNE.Min<0.2)
summary(bdd_subset$Leuco.MAX)
bdd_subset$Leuco.MAX<-as.character(as.numeric(bdd_subset$Leuco.MAX))
summary(bdd_subset$Lympho.Min)
summary(bdd_subset$PNN.MAX)
bdd_subset$PNN.MAX<-as.character(as.numeric(bdd_subset$PNN.MAX))
bdd_subset$eosinopenie_pnn.1<-as.factor(ifelse(bdd_subset$PNE.Min < 0.5 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$eosinopenie_pnn.2<-as.factor(ifelse(bdd_subset$PNE.Min < 0.04 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali<-as.factor(ifelse(bdd_subset$PNE.Min<0.04, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.2<-as.factor(ifelse(bdd_subset$PNE.Min<0.01, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.3<-as.factor(ifelse(bdd_subset$PNE.Min<0.04 & bdd_subset$PNN.MAX > 7, 1, ifelse(is.na(bdd_subset$PNE.Min)
| is.na(bdd_subset$PNE.Max), NA, 0)))
bdd_subset$ADL6<-as.numeric(as.character(bdd_subset$ADL6))
library(DescTools)
summary(bdd_subset$ADL6)
bdd_subset$ADL6_quali1<-as.factor(ifelse(bdd_subset$ADL6<=3, 0, 1))
reg_adl1<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali1, family = "binomial")
bdd_subset$ADL6_quali2<-as.factor(ifelse(bdd_subset$ADL6<=2, 0, 1))
reg_adl2<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali2, family = "binomial")
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.3+ADL6_quali2,
family = "binomial", data=bdd_subset)
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+bdd_subset$PNE_quali.2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
exp(coef(reg))
exp(confint(reg))
bdd_sub<-select(bdd,Age..ans., sexe.0.f.1.h, bdd_subset$PNE_quali.2, ADL6_quali2)
bdd_sub<-select(bdd, "Age..ans.", "sexe.0.f.1.h", "PNE_quali.2", "ADL6_quali2")
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+bdd_subset$PNE_quali.2+ADL6_quali2,
family = "binomial", data=bdd_subset)
bdd_sub<-select(bdd_subset, "Age..ans.", "sexe.0.f.1.h", "PNE_quali.2", "ADL6_quali2")
bdd_sub<-filter(bdd_sub, !is.na(bdd_sub$Age..ans.), !is.na(bdd_sub$sexe.0.f.1.h), !is.na(bdd_sub$PNE_quali.2), !is.na(bdd_sub$ADL6_quali2))
bdd_sub<-select(bdd_subset, "Age..ans.", "sexe.0.f.1.h", "PNE_quali.2", "ADL6_quali2", "décès..0.1.")
bdd_sub<-filter(bdd_sub, !is.na(bdd_sub$Age..ans.), !is.na(bdd_sub$sexe.0.f.1.h),
!is.na(bdd_sub$PNE_quali.2), !is.na(bdd_sub$ADL6_quali2), !is.na(bdd_sub$décès..0.1.))
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+bdd_subset$PNE_quali.2+ADL6_quali2+charlson_quali2,
family = "binomial", data=bdd_subset)
bdd_subset$charlson_quali2<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=5, 0, 1))
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+bdd_subset$PNE_quali.2+ADL6_quali2+charlson_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
