setwd("/Users/Tiago/Desktop/BF is cool/Jill")
library(tidyverse)
library(lubridate)
library(gtsummary)
library(doudpackage)
library(forestplot)
bdd<-read.csv2("bdd_jill.csv")
summary(bdd)
for (i  in 1:ncol(bdd)){
if (is.character(bdd[,i]) && any(grep("/", bdd[,i]))){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")
}
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(bdd[,i])}
if (is.factor(bdd[,i]) && nlevels(bdd[,i])>=15)
{
print(paste("from factor to int", colnames(bdd)[i]))
bdd[,i]<-as.numeric(as.character(bdd[,i]))
}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 3)
{
print(paste("from int to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd)
levels(bdd$BPCO)[levels(bdd$BPCO)=="?"]<-NA
levels(bdd$BPCO)[levels(bdd$BPCO)==""]<-NA
levels(bdd$Alcool..0.1.)[levels(bdd$Alcool..0.1.)=="?"]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)==""]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)=="?"]<-NA
levels(bdd$Anosmie..0.1.)[levels(bdd$Anosmie..0.1.)=="?"]<-NA
levels(bdd$Agueusie..0.1.)[levels(bdd$Agueusie..0.1.)=="?"]<-NA
colnames(bdd)
bdd_subset<-select(bdd, Date.d.entrée.UGA..JJ.MM.AA., Date.sortie.UGA..JJ.MM.AA., Age..ans., sexe.0.f.1.h,
Prov.autre.service..type.service.SAU..etc..., Alcool..0.1., Tabac..PA., Chutes.répétition...0.1., Poids..Kg.,
IMC, Charlson.pondéré, ADL6, institution..0.1., Nbe.total.de.molécules, Nosocomial..0.1.,
Type.imagerie..TDM..0.Radio.1., ACFA.parox...0.1., SCA..0.1., OAP..0.1.,
T.vigilance..Glagow...14...0.1., MTEV..0.1.,  Hémorragie..0.1., Transfusion..0.1.,
IRénaleA..0.1., "Fécalome..0.1.", Escarre..0.1., Globe..0.1.,
qSOFA.Max, Antibiothérapie.initiale, Leuco.MAX, Leuco.min, PNN.MAX, PNN.min,
PNE.Max, PNE.Min, Lympho.Max, Lympho.Min, Hb.MAX, Hb.min,
Plqt.MAX, Plqt.min, Cytolyse..0.1., Cholestase..0.1.,
DMS.UGA.covid, décès..0.1., RAD, SSR, Autre..hors.décès.)
bdd_subset$Tabac..PA.<-as.numeric(bdd_subset$Tabac..PA.)
bdd_subset$Prov.autre.service..type.service.SAU..etc...<-as.factor(bdd_subset$Prov.autre.service..type.service.SAU..etc...)
summary(bdd_subset)
## A preciser en commentaire que j ai considere les vides commes 0 ###
levels(bdd_subset$Antibiothérapie.initiale)[1]<-0
bdd_subset$Antibiothérapie.initiale<-as.character(bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-ifelse(bdd_subset$Antibiothérapie.initiale!="0", "1", bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-as.factor(bdd_subset$Antibiothérapie.initiale)
bdd_subset$devenir<-as.factor(ifelse(bdd_subset$décès..0.1.==1, "décès",
ifelse(bdd_subset$RAD==1, "RAD",
ifelse(bdd_subset$SSR==1, "SSR", "autre"))))
for (i in 1:ncol(bdd_subset))
{
if (is.factor(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "facteur i= ", i))
else if (is.numeric(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "numeric i= ", i))
else
print(paste(colnames(bdd_subset)[i], "a determiner i= ", i))
}
bdd_subset$PNE.Max<-as.numeric(as.character(bdd_subset$PNE.Max))
bdd_subset$PNE.Min<-as.numeric(as.character(bdd_subset$PNE.Min))
bdd_subset$Lympho.Max<-as.numeric(as.character(bdd_subset$Lympho.Max))
bdd_subset$Lympho.Min<-as.numeric(as.character(bdd_subset$Lympho.Min))
summary(bdd_subset$PNE.Min)
summary(bdd_subset$PNE.Max)
table(bdd_subset$PNE.Min<0.2)
summary(bdd_subset$Leuco.MAX)
bdd_subset$Leuco.MAX<-as.character(as.numeric(bdd_subset$Leuco.MAX))
summary(bdd_subset$Lympho.Min)
summary(bdd_subset$PNN.MAX)
bdd_subset$PNN.MAX<-as.character(as.numeric(bdd_subset$PNN.MAX))
bdd_subset$eosinopenie_pnn.1<-as.factor(ifelse(bdd_subset$PNE.Min < 0.5 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$eosinopenie_pnn.2<-as.factor(ifelse(bdd_subset$PNE.Min < 0.04 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali<-as.factor(ifelse(bdd_subset$PNE.Min<0.04, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.2<-as.factor(ifelse(bdd_subset$PNE.Min<0.01, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.3<-as.factor(ifelse(bdd_subset$PNE.Min<0.04 & bdd_subset$PNN.MAX > 7, 1, ifelse(is.na(bdd_subset$PNE.Min)
| is.na(bdd_subset$PNE.Max), NA, 0)))
bdd_subset$ADL6<-as.numeric(as.character(bdd_subset$ADL6))
is.na(bdd_subset$décès..0.1.)
bdd_subset<-filter(bdd_subset, !is.na("décès..0.1."))
bdd_subset<-bdd_subset[complete.cases(bdd_subset$dédécès..0.1.)]
bdd_subset<-bdd_subset[complete.cases(bdd_subset$décès..0.1.)]
bdd_subset<-bdd_subset[complete.cases(bdd_subset$décès..0.1.),]
??set_label
setwd("/Users/Tiago/Desktop/BF is cool/Jill")
library(tidyverse)
library(lubridate)
library(gtsummary)
library(doudpackage)
library(forestplot)
bdd<-read.csv2("bdd_jill.csv")
summary(bdd)
for (i  in 1:ncol(bdd)){
if (is.character(bdd[,i]) && any(grep("/", bdd[,i]))){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")
}
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(bdd[,i])}
if (is.factor(bdd[,i]) && nlevels(bdd[,i])>=15)
{
print(paste("from factor to int", colnames(bdd)[i]))
bdd[,i]<-as.numeric(as.character(bdd[,i]))
}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 3)
{
print(paste("from int to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd)
levels(bdd$BPCO)[levels(bdd$BPCO)=="?"]<-NA
levels(bdd$BPCO)[levels(bdd$BPCO)==""]<-NA
levels(bdd$Alcool..0.1.)[levels(bdd$Alcool..0.1.)=="?"]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)==""]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)=="?"]<-NA
levels(bdd$Anosmie..0.1.)[levels(bdd$Anosmie..0.1.)=="?"]<-NA
levels(bdd$Agueusie..0.1.)[levels(bdd$Agueusie..0.1.)=="?"]<-NA
colnames(bdd)
bdd_subset<-select(bdd, Date.d.entrée.UGA..JJ.MM.AA., Date.sortie.UGA..JJ.MM.AA., Age..ans., sexe.0.f.1.h,
Prov.autre.service..type.service.SAU..etc..., Alcool..0.1., Tabac..PA., Chutes.répétition...0.1., Poids..Kg.,
IMC, Charlson.pondéré, ADL6, institution..0.1., Nbe.total.de.molécules, Nosocomial..0.1.,
Type.imagerie..TDM..0.Radio.1., ACFA.parox...0.1., SCA..0.1., OAP..0.1.,
T.vigilance..Glagow...14...0.1., MTEV..0.1.,  Hémorragie..0.1., Transfusion..0.1.,
IRénaleA..0.1., "Fécalome..0.1.", Escarre..0.1., Globe..0.1.,
qSOFA.Max, Antibiothérapie.initiale, Leuco.MAX, Leuco.min, PNN.MAX, PNN.min,
PNE.Max, PNE.Min, Lympho.Max, Lympho.Min, Hb.MAX, Hb.min,
Plqt.MAX, Plqt.min, Cytolyse..0.1., Cholestase..0.1.,
DMS.UGA.covid, décès..0.1., RAD, SSR, Autre..hors.décès.)
bdd_subset$Tabac..PA.<-as.numeric(bdd_subset$Tabac..PA.)
bdd_subset$Prov.autre.service..type.service.SAU..etc...<-as.factor(bdd_subset$Prov.autre.service..type.service.SAU..etc...)
summary(bdd_subset)
## A preciser en commentaire que j ai considere les vides commes 0 ###
levels(bdd_subset$Antibiothérapie.initiale)[1]<-0
bdd_subset$Antibiothérapie.initiale<-as.character(bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-ifelse(bdd_subset$Antibiothérapie.initiale!="0", "1", bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-as.factor(bdd_subset$Antibiothérapie.initiale)
bdd_subset$devenir<-as.factor(ifelse(bdd_subset$décès..0.1.==1, "décès",
ifelse(bdd_subset$RAD==1, "RAD",
ifelse(bdd_subset$SSR==1, "SSR", "autre"))))
for (i in 1:ncol(bdd_subset))
{
if (is.factor(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "facteur i= ", i))
else if (is.numeric(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "numeric i= ", i))
else
print(paste(colnames(bdd_subset)[i], "a determiner i= ", i))
}
bdd_subset$PNE.Max<-as.numeric(as.character(bdd_subset$PNE.Max))
bdd_subset$PNE.Min<-as.numeric(as.character(bdd_subset$PNE.Min))
bdd_subset$Lympho.Max<-as.numeric(as.character(bdd_subset$Lympho.Max))
bdd_subset$Lympho.Min<-as.numeric(as.character(bdd_subset$Lympho.Min))
summary(bdd_subset$PNE.Min)
summary(bdd_subset$PNE.Max)
table(bdd_subset$PNE.Min<0.2)
summary(bdd_subset$Leuco.MAX)
bdd_subset$Leuco.MAX<-as.character(as.numeric(bdd_subset$Leuco.MAX))
summary(bdd_subset$Lympho.Min)
summary(bdd_subset$PNN.MAX)
bdd_subset$PNN.MAX<-as.character(as.numeric(bdd_subset$PNN.MAX))
bdd_subset$eosinopenie_pnn.1<-as.factor(ifelse(bdd_subset$PNE.Min < 0.5 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$eosinopenie_pnn.2<-as.factor(ifelse(bdd_subset$PNE.Min < 0.04 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali<-as.factor(ifelse(bdd_subset$PNE.Min<0.04, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.2<-as.factor(ifelse(bdd_subset$PNE.Min<0.01, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.3<-as.factor(ifelse(bdd_subset$PNE.Min<0.04 & bdd_subset$PNN.MAX > 7, 1, ifelse(is.na(bdd_subset$PNE.Min)
| is.na(bdd_subset$PNE.Max), NA, 0)))
bdd_subset$ADL6<-as.numeric(as.character(bdd_subset$ADL6))
bdd_subset<-bdd_subset[complete.cases(bdd_subset$décès..0.1.),]
### Analyse univariee ###
uni<-ft_desc_tab(bdd_subset, na.print = T)
### Analyse bivariee ###
ana_biv<-ft_ana_biv(bdd_subset, "décès..0.1.")
## Ana desc ##
ana_desc<-ft_desc_tab(bdd_subset, "décès..0.1.")
## Regression ###
colnames(bdd_subset)
summary(bdd_subset$décès..0.1.)
### Determination des seuils pour ADL & charlson & cut-off PNE
library(DescTools)
summary(bdd_subset$ADL6)
bdd_subset$ADL6_quali1<-as.factor(ifelse(bdd_subset$ADL6<=3, 0, 1))
reg_adl1<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali1, family = "binomial")
bdd_subset$ADL6_quali2<-as.factor(ifelse(bdd_subset$ADL6<=2, 0, 1))
reg_adl2<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali2, family = "binomial")
Cstat(x= predict(reg_adl1, type="response"),
resp = model.response((model.frame(reg_adl1))))
Cstat(x= predict(reg_adl2, type="response"),
resp = model.response((model.frame(reg_adl2))))
# Choix sur <=2
summary(bdd_subset$Charlson.pondéré)
bdd_subset$charlson_quali1<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=4, 0, 1))
bdd_subset$charlson_quali2<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=5, 0, 1))
reg_charlson1<-glm(bdd_subset$décès..0.1.~bdd_subset$charlson_quali1, family = "binomial")
reg_charlson2<-glm(bdd_subset$décès..0.1.~bdd_subset$charlson_quali2, family = "binomial")
Cstat(x= predict(reg_charlson1, type="response"),
resp = model.response((model.frame(reg_charlson1))))
Cstat(x= predict(reg_charlson2, type="response"),
resp = model.response((model.frame(reg_charlson2))))
#Choix sur <=5
bdd_reg<-select(bdd_subset, Age..ans., sexe.0.f.1.h,
eosinopenie_pnn.1,charlson_quali2, ADL6_quali2, décès..0.1.)
bdd_reg<-bdd_reg[complete.cases(bdd_reg),]
summary(bdd_reg$décès..0.1.)
## OR non ajuste
reg_uni <- glm(décès..0.1.~eosinopenie_pnn.1, family = "binomial", data=bdd_subset)
reg_uni %>% tbl_regression(exponentiate = T)
## OR ajuste
reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.1+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
exp(coef(reg))
exp(confint(reg))
reg %>% tbl_regression(exponentiate = T)
### Test PNN seuls en reg
reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNN.MAX+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
exp(coef(reg))
exp(confint(reg))
#### Var PNN/PNE
bdd_subset$eosinopenie_pnn.rapport<-as.numeric(as.character(bdd_subset$PNE.Min/bdd_subset$PNN.MAX))
summary(bdd_subset$eosinopenie_pnn.rapport)
### Test PNN seuls en reg
reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+PNN.MAX+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
exp(coef(reg))
exp(confint(reg))
exp(confint(coef(reg)))
confint(reg)
setwd("/Users/Tiago/Desktop/BF is cool/Jill")
library(tidyverse)
library(lubridate)
library(gtsummary)
library(doudpackage)
library(forestplot)
bdd<-read.csv2("bdd_jill.csv")
summary(bdd)
for (i  in 1:ncol(bdd)){
if (is.character(bdd[,i]) && any(grep("/", bdd[,i]))){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")
}
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(bdd[,i])}
if (is.factor(bdd[,i]) && nlevels(bdd[,i])>=15)
{
print(paste("from factor to int", colnames(bdd)[i]))
bdd[,i]<-as.numeric(as.character(bdd[,i]))
}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 3)
{
print(paste("from int to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd)
levels(bdd$BPCO)[levels(bdd$BPCO)=="?"]<-NA
levels(bdd$BPCO)[levels(bdd$BPCO)==""]<-NA
levels(bdd$Alcool..0.1.)[levels(bdd$Alcool..0.1.)=="?"]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)==""]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)=="?"]<-NA
levels(bdd$Anosmie..0.1.)[levels(bdd$Anosmie..0.1.)=="?"]<-NA
levels(bdd$Agueusie..0.1.)[levels(bdd$Agueusie..0.1.)=="?"]<-NA
colnames(bdd)
bdd_subset<-select(bdd, Date.d.entrée.UGA..JJ.MM.AA., Date.sortie.UGA..JJ.MM.AA., Age..ans., sexe.0.f.1.h,
Prov.autre.service..type.service.SAU..etc..., Alcool..0.1., Tabac..PA., Chutes.répétition...0.1., Poids..Kg.,
IMC, Charlson.pondéré, ADL6, institution..0.1., Nbe.total.de.molécules, Nosocomial..0.1.,
Type.imagerie..TDM..0.Radio.1., ACFA.parox...0.1., SCA..0.1., OAP..0.1.,
T.vigilance..Glagow...14...0.1., MTEV..0.1.,  Hémorragie..0.1., Transfusion..0.1.,
IRénaleA..0.1., "Fécalome..0.1.", Escarre..0.1., Globe..0.1.,
qSOFA.Max, Antibiothérapie.initiale, Leuco.MAX, Leuco.min, PNN.MAX, PNN.min,
PNE.Max, PNE.Min, Lympho.Max, Lympho.Min, Hb.MAX, Hb.min,
Plqt.MAX, Plqt.min, Cytolyse..0.1., Cholestase..0.1.,
DMS.UGA.covid, décès..0.1., RAD, SSR, Autre..hors.décès.)
bdd_subset$Tabac..PA.<-as.numeric(bdd_subset$Tabac..PA.)
bdd_subset$Prov.autre.service..type.service.SAU..etc...<-as.factor(bdd_subset$Prov.autre.service..type.service.SAU..etc...)
summary(bdd_subset)
## A preciser en commentaire que j ai considere les vides commes 0 ###
levels(bdd_subset$Antibiothérapie.initiale)[1]<-0
bdd_subset$Antibiothérapie.initiale<-as.character(bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-ifelse(bdd_subset$Antibiothérapie.initiale!="0", "1", bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-as.factor(bdd_subset$Antibiothérapie.initiale)
bdd_subset$devenir<-as.factor(ifelse(bdd_subset$décès..0.1.==1, "décès",
ifelse(bdd_subset$RAD==1, "RAD",
ifelse(bdd_subset$SSR==1, "SSR", "autre"))))
for (i in 1:ncol(bdd_subset))
{
if (is.factor(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "facteur i= ", i))
else if (is.numeric(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "numeric i= ", i))
else
print(paste(colnames(bdd_subset)[i], "a determiner i= ", i))
}
bdd_subset$PNE.Max<-as.numeric(as.character(bdd_subset$PNE.Max))
bdd_subset$PNE.Min<-as.numeric(as.character(bdd_subset$PNE.Min))
bdd_subset$Lympho.Max<-as.numeric(as.character(bdd_subset$Lympho.Max))
bdd_subset$Lympho.Min<-as.numeric(as.character(bdd_subset$Lympho.Min))
summary(bdd_subset$PNE.Min)
summary(bdd_subset$PNE.Max)
table(bdd_subset$PNE.Min<0.2)
summary(bdd_subset$Leuco.MAX)
bdd_subset$Leuco.MAX<-as.character(as.numeric(bdd_subset$Leuco.MAX))
summary(bdd_subset$Lympho.Min)
summary(bdd_subset$PNN.MAX)
bdd_subset$PNN.MAX<-as.character(as.numeric(bdd_subset$PNN.MAX))
bdd_subset$eosinopenie_pnn.1<-as.factor(ifelse(bdd_subset$PNE.Min < 0.5 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$eosinopenie_pnn.2<-as.factor(ifelse(bdd_subset$PNE.Min < 0.04 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali<-as.factor(ifelse(bdd_subset$PNE.Min<0.04, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.2<-as.factor(ifelse(bdd_subset$PNE.Min<0.01, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.3<-as.factor(ifelse(bdd_subset$PNE.Min<0.04 & bdd_subset$PNN.MAX > 7, 1, ifelse(is.na(bdd_subset$PNE.Min)
| is.na(bdd_subset$PNE.Max), NA, 0)))
bdd_subset$ADL6<-as.numeric(as.character(bdd_subset$ADL6))
levels(bdd_subset$décès..0.1.)
bdd_subset$décès..0.1.<-addNA(bdd_subset$décès..0.1.)
levels(bdd_subset$décès..0.1.)
levels(bdd_subset$dédécès..0.1.)[levels(bdd_subset$décès..0.1.)=="NA"]<-"1"
levels(bdd_subset$dédécès..0.1.)[levels(bdd_subset$décès..0.1.)==NA]<-"1"
levels(bdd_subset$dédécès..0.1.)[levels(bdd_subset$décès..0.1.)==NA]<-"3"
levels(bdd_subset$décès..0.1.)[levels(bdd_subset$décès..0.1.)==NA]<-"1"
summary(bdd_subset$décès..0.1.)
levels(bdd_subset$décès..0.1.)[levels(bdd_subset$décès..0.1.)=="NA"]<-"1"
summary(bdd_subset$décès..0.1.)
levels(bdd_subset$décès..0.1.)[3]<-"1"
summary(bdd_subset$décès..0.1.)
levels(bdd_subset$décès..0.1.)
setwd("/Users/Tiago/Desktop/BF is cool/Jill")
library(tidyverse)
library(lubridate)
library(gtsummary)
library(doudpackage)
library(forestplot)
bdd<-read.csv2("bdd_jill.csv")
summary(bdd)
for (i  in 1:ncol(bdd)){
if (is.character(bdd[,i]) && any(grep("/", bdd[,i]))){
print(paste("to Date: ", colnames(bdd)[i]))
bdd[,i]<-as.Date(bdd[,i], "%d/%m/%Y")
}
if(is.character(bdd[,i])){
print(paste("to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(bdd[,i])}
if (is.factor(bdd[,i]) && nlevels(bdd[,i])>=15)
{
print(paste("from factor to int", colnames(bdd)[i]))
bdd[,i]<-as.numeric(as.character(bdd[,i]))
}
if (is.numeric(bdd[,i]) && mean(bdd[,i], na.rm = TRUE) <= 3)
{
print(paste("from int to factor: ", colnames(bdd)[i]))
bdd[,i]<-as.factor(as.character(bdd[,i]))
}
}
summary(bdd)
levels(bdd$BPCO)[levels(bdd$BPCO)=="?"]<-NA
levels(bdd$BPCO)[levels(bdd$BPCO)==""]<-NA
levels(bdd$Alcool..0.1.)[levels(bdd$Alcool..0.1.)=="?"]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)==""]<-NA
levels(bdd$Tabac..PA.)[levels(bdd$Tabac..PA.)=="?"]<-NA
levels(bdd$Anosmie..0.1.)[levels(bdd$Anosmie..0.1.)=="?"]<-NA
levels(bdd$Agueusie..0.1.)[levels(bdd$Agueusie..0.1.)=="?"]<-NA
colnames(bdd)
bdd_subset<-select(bdd, Date.d.entrée.UGA..JJ.MM.AA., Date.sortie.UGA..JJ.MM.AA., Age..ans., sexe.0.f.1.h,
Prov.autre.service..type.service.SAU..etc..., Alcool..0.1., Tabac..PA., Chutes.répétition...0.1., Poids..Kg.,
IMC, Charlson.pondéré, ADL6, institution..0.1., Nbe.total.de.molécules, Nosocomial..0.1.,
Type.imagerie..TDM..0.Radio.1., ACFA.parox...0.1., SCA..0.1., OAP..0.1.,
T.vigilance..Glagow...14...0.1., MTEV..0.1.,  Hémorragie..0.1., Transfusion..0.1.,
IRénaleA..0.1., "Fécalome..0.1.", Escarre..0.1., Globe..0.1.,
qSOFA.Max, Antibiothérapie.initiale, Leuco.MAX, Leuco.min, PNN.MAX, PNN.min,
PNE.Max, PNE.Min, Lympho.Max, Lympho.Min, Hb.MAX, Hb.min,
Plqt.MAX, Plqt.min, Cytolyse..0.1., Cholestase..0.1.,
DMS.UGA.covid, décès..0.1., RAD, SSR, Autre..hors.décès.)
bdd_subset$Tabac..PA.<-as.numeric(bdd_subset$Tabac..PA.)
bdd_subset$Prov.autre.service..type.service.SAU..etc...<-as.factor(bdd_subset$Prov.autre.service..type.service.SAU..etc...)
summary(bdd_subset)
## A preciser en commentaire que j ai considere les vides commes 0 ###
levels(bdd_subset$Antibiothérapie.initiale)[1]<-0
bdd_subset$Antibiothérapie.initiale<-as.character(bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-ifelse(bdd_subset$Antibiothérapie.initiale!="0", "1", bdd_subset$Antibiothérapie.initiale)
bdd_subset$Antibiothérapie.initiale<-as.factor(bdd_subset$Antibiothérapie.initiale)
bdd_subset$devenir<-as.factor(ifelse(bdd_subset$décès..0.1.==1, "décès",
ifelse(bdd_subset$RAD==1, "RAD",
ifelse(bdd_subset$SSR==1, "SSR", "autre"))))
for (i in 1:ncol(bdd_subset))
{
if (is.factor(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "facteur i= ", i))
else if (is.numeric(bdd_subset[,i]))
print(paste(colnames(bdd_subset)[i], "numeric i= ", i))
else
print(paste(colnames(bdd_subset)[i], "a determiner i= ", i))
}
bdd_subset$PNE.Max<-as.numeric(as.character(bdd_subset$PNE.Max))
bdd_subset$PNE.Min<-as.numeric(as.character(bdd_subset$PNE.Min))
bdd_subset$Lympho.Max<-as.numeric(as.character(bdd_subset$Lympho.Max))
bdd_subset$Lympho.Min<-as.numeric(as.character(bdd_subset$Lympho.Min))
summary(bdd_subset$PNE.Min)
summary(bdd_subset$PNE.Max)
table(bdd_subset$PNE.Min<0.2)
summary(bdd_subset$Leuco.MAX)
bdd_subset$Leuco.MAX<-as.character(as.numeric(bdd_subset$Leuco.MAX))
summary(bdd_subset$Lympho.Min)
summary(bdd_subset$PNN.MAX)
bdd_subset$PNN.MAX<-as.character(as.numeric(bdd_subset$PNN.MAX))
bdd_subset$eosinopenie_pnn.1<-as.factor(ifelse(bdd_subset$PNE.Min < 0.5 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$eosinopenie_pnn.2<-as.factor(ifelse(bdd_subset$PNE.Min < 0.04 & bdd_subset$PNN.MAX > 7, 1,
ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali<-as.factor(ifelse(bdd_subset$PNE.Min<0.04, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.2<-as.factor(ifelse(bdd_subset$PNE.Min<0.01, 1, ifelse(is.na(bdd_subset$PNE.Min), NA, 0)))
bdd_subset$PNE_quali.3<-as.factor(ifelse(bdd_subset$PNE.Min<0.04 & bdd_subset$PNN.MAX > 7, 1, ifelse(is.na(bdd_subset$PNE.Min)
| is.na(bdd_subset$PNE.Max), NA, 0)))
bdd_subset$ADL6<-as.numeric(as.character(bdd_subset$ADL6))
bdd_subset$décès..0.1.<-addNA(bdd_subset$décès..0.1.)
levels(bdd_subset$décès..0.1.)
summary(bdd_subset$décès..0.1.)
levels(bdd_subset$décès..0.1.)[3]<-"1"
summary(bdd_subset$décès..0.1.)
### Analyse univariee ###
uni<-ft_desc_tab(bdd_subset, na.print = T)
### Analyse bivariee ###
ana_biv<-ft_ana_biv(bdd_subset, "décès..0.1.")
## Ana desc ##
ana_desc<-ft_desc_tab(bdd_subset, "décès..0.1.")
## Regression ###
colnames(bdd_subset)
summary(bdd_subset$décès..0.1.)
### Determination des seuils pour ADL & charlson & cut-off PNE
library(DescTools)
summary(bdd_subset$ADL6)
bdd_subset$ADL6_quali1<-as.factor(ifelse(bdd_subset$ADL6<=3, 0, 1))
reg_adl1<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali1, family = "binomial")
bdd_subset$ADL6_quali2<-as.factor(ifelse(bdd_subset$ADL6<=2, 0, 1))
reg_adl2<-glm(bdd_subset$décès..0.1.~bdd_subset$ADL6_quali2, family = "binomial")
Cstat(x= predict(reg_adl1, type="response"),
resp = model.response((model.frame(reg_adl1))))
Cstat(x= predict(reg_adl2, type="response"),
resp = model.response((model.frame(reg_adl2))))
# Choix sur <=2
summary(bdd_subset$Charlson.pondéré)
bdd_subset$charlson_quali1<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=4, 0, 1))
bdd_subset$charlson_quali2<-as.factor(ifelse(bdd_subset$Charlson.pondéré<=5, 0, 1))
reg_charlson1<-glm(bdd_subset$décès..0.1.~bdd_subset$charlson_quali1, family = "binomial")
reg_charlson2<-glm(bdd_subset$décès..0.1.~bdd_subset$charlson_quali2, family = "binomial")
Cstat(x= predict(reg_charlson1, type="response"),
resp = model.response((model.frame(reg_charlson1))))
Cstat(x= predict(reg_charlson2, type="response"),
resp = model.response((model.frame(reg_charlson2))))
#Choix sur <=5
bdd_reg<-select(bdd_subset, Age..ans., sexe.0.f.1.h,
eosinopenie_pnn.1,charlson_quali2, ADL6_quali2, décès..0.1.)
bdd_reg<-bdd_reg[complete.cases(bdd_reg),]
summary(bdd_reg$décès..0.1.)
## OR non ajuste
reg_uni <- glm(décès..0.1.~eosinopenie_pnn.1, family = "binomial", data=bdd_subset)
reg_uni %>% tbl_regression(exponentiate = T)
## OR ajuste
reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_pnn.1+charlson_quali2+ADL6_quali2,
family = "binomial", data=bdd_subset)
summary(reg)
exp(coef(reg))
exp(confint(reg))
reg %>% tbl_regression(exponentiate = T)
# #### eosino + lympho
# bdd_subset$eosinopenie_lympho<-as.factor(ifelse(bdd_subset$PNE.Min < 0.4 & bdd_subset$Lympho.Min < 1.2, 1,
#                                                ifelse(is.na(bdd_subset$PNN.MAX)|is.na(bdd_subset$PNE.Min), NA, 0)))
# reg <- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+eosinopenie_lympho+charlson_quali2+ADL6_quali2,
#            family = "binomial", data=bdd_subset)
# summary(reg)
# exp(coef(reg))
# exp(confint(reg))
#
# ##
library(sjmisc)
bdd_sub<-select(bdd_subset, "Age..ans.", "sexe.0.f.1.h", "PNE_quali.2", "ADL6_quali2", "décès..0.1.")
bdd_sub<-filter(bdd_sub, !is.na(bdd_sub$Age..ans.), !is.na(bdd_sub$sexe.0.f.1.h),
!is.na(bdd_sub$PNE_quali.2), !is.na(bdd_sub$ADL6_quali2), !is.na(bdd_sub$décès..0.1.))
set_label(bdd_subset$décès..0.1.) <- "Décès"
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+bdd_subset$PNE_quali.2+ADL6_quali2,
family = "binomial", data=bdd_subset)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggplot2)
set_label(bdd_subset$décès..0.1.) <- "Décès"
theme_set(theme_sjplot())
plot_model(reg, axis.labels = c("ADL < 3 (ref = N)", "PNE < 0.01 (ref = N)", "Sexe (ref = F)",
"Age"), show.values = T, value.offset = .3)
set_label(bdd_subset$décès..0.1.) <- "Décès"
reg<- glm(décès..0.1.~Age..ans.+sexe.0.f.1.h+bdd_subset$PNE_quali.2+ADL6_quali2,
family = "binomial", data=bdd_subset)
theme_set(theme_sjplot())
plot_model(reg, axis.labels = c("ADL < 3 (ref = N)", "PNE < 0.01 (ref = N)", "Sexe (ref = F)",
"Age"), show.values = T, value.offset = .3)
?exit
