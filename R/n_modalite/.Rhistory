# tmp<-cbind(tmp, n)
return(tmp_mat)
}
test <- bdd %>%
group_by(Sexe) %>%
do(ft_runquanti_tab(., 1, 0))
sourceEntireFolder('.')
univ<-ft_desc_tab(bdd, group = "Sexe", na.print = T)
sapply(bdd, class)
is.numeric(bdd$GripD)
setwd('/Users/tiago2/BF/PBR/BDD/benjamin dufournier')
library(dplyr)
load('.RData')
setwd('/Users/tiago2/BF/doudpackage/R/Non normal')
sourceEntireFolder <- function(folderName, verbose=FALSE, showWarnings=TRUE) {
files <- list.files(folderName, full.names=TRUE)
# Grab only R files
files <- files[ grepl("\\.[rR]$", files) ]
if (!length(files) && showWarnings)
warning("No R files in ", folderName)
for (f in files) {
if (verbose)
cat("sourcing: ", f, "\n")
## TODO:  add caught whether error or not and return that
try(source(f, local=FALSE, echo=FALSE), silent=!verbose)
}
return(invisible(NULL))
}
sourceEntireFolder('.')
digits.opt = 1
nonnormal = 0
?lapply
ft_tab_quanti<-function(col.var, digits.opt, nonnormal){
if(!is.numeric(x))
return(NULL)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, UESE.NAMES = T,ft_tab_quanti, digits.opt, nonnormal)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, USE.NAMES = T,ft_tab_quanti, digits.opt, nonnormal)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res,ft_tab_quanti, digits.opt, nonnormal, USE.NAMES = T)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res,ft_tab_quanti, digits.opt, nonnormal, USE.NAMES = TRUE)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt, nonnormal){
if(!is.numeric(col.var))
return(NULL)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt, nonnormal){
if(!is.numeric(col.var))
return(NULL)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
# print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt, nonnormal){
if(!is.numeric(col.var))
return(NULL)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
# print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
print(tmp)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt, nonnormal){
if(!is.numeric(col.var))
return(NULL)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
# print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
print(tmp)
return(tmp)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt, nonnormal){
if(!is.numeric(col.var))
return(NULL)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
# print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
print(tmp)
return(tmp)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, group)
print(res)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
?split
test<-split(bdd, "Sexe")
test<-split(bdd, bdd$Sexe)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, data[,group])
print(res)
res<-lapply(res, ft_tab_quanti, digits.opt, nonnormal)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
?lapply
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
if(is.null(group))
return(ft_tab_quanti_null())
else{
res<-split(data, data[,group])
res<-lapply(res, mean, na.rm = T)
return(res)
}
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-split(data, data[,group])
res<-lapply(res, mean, na.rm = T)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
test<-split(bdd, bdd$Sexe)
test
ft_runquanti_tab(bdd[, "Age"], group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-split(data, data[,group])
res<-lapply(res, ft_tab_quanti)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
# print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
print(tmp)
return(tmp)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-split(data, data[,group])
res<-lapply(res, ft_tab_quanti)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
View(test)
test$F
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
# print(names(col.var))
tmp<-c('Min-Max' = paste(Min, '-', Max, sep = " "))
print(tmp)
return(tmp)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-dplyr::group_by(data, group)
res<-sapply(res, ft_tab_quanti)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-dplyr::group_by(data, data[,group])
res<-sapply(res, ft_tab_quanti)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
?group_by
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-dplyr::group_by(data, data[,group]) %>%
summarise(Min = ft_tab_quanti(Min))
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-dplyr::group_by(data, data[,group])
res<-sapply(res, summarise, ft_tab_quanti)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
?by
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-by(data, data[,group], ft_tab_quanti)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-by(data, data[,group], mean, na.rm = T)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-by(data[,"Age"], data[,group], mean, na.rm = T)
return(res)
# }
}
ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
a
as.data.frame(a)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-by(data[,"Age"], data[,group], mean, na.rm = T, simplify = F)
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
a
unlist(a)
as.data.frame(unlist(a))
?unlist
as.data.frame("mean" = unlist(a))
data.frame("mean" = unlist(a))
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F), use.names = T))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
a
View(a)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F)))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
View(a)
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
if (nonnormal == 0){
"mean"<-round(mean(subset[,i], na.rm = T), digits = digits.opt)
"sd"<-round(sd(subset[,i], na.rm = T), digits = digits.opt)
tmp_mat<-c(var = colnames(data)[i],
"Total"=gsub(" ", "", paste(mean, "(",  sd,")")), "Min-Max"=paste(Min, Max, sep="-"))
}
return(tmp_mat)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F)))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
if (nonnormal == 0){
"mean"<-round(mean(col.var, na.rm = T), digits = digits.opt)
"sd"<-round(sd(col.var, na.rm = T), digits = digits.opt)
tmp_mat<-c(var = colnames(data)[i],
"Total"=gsub(" ", "", paste(mean, "(",  sd,")")), "Min-Max"=paste(Min, Max, sep="-"))
}
return(tmp_mat)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F)))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
View(a)
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
print(col.var)
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
if (nonnormal == 0){
"mean"<-round(mean(col.var, na.rm = T), digits = digits.opt)
"sd"<-round(sd(col.var, na.rm = T), digits = digits.opt)
tmp_mat<-c(var = colnames(data)[i],
"Total"=gsub(" ", "", paste(mean, "(",  sd,")")), "Min-Max"=paste(Min, Max, sep="-"))
}
return(tmp_mat)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F)))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
print(names(col.var))
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
if (nonnormal == 0){
"mean"<-round(mean(col.var, na.rm = T), digits = digits.opt)
"sd"<-round(sd(col.var, na.rm = T), digits = digits.opt)
tmp_mat<-c(var = colnames(data)[i],
"Total"=gsub(" ", "", paste(mean, "(",  sd,")")), "Min-Max"=paste(Min, Max, sep="-"))
}
return(tmp_mat)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F)))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_tab_quanti<-function(col.var, digits.opt = 1, nonnormal = 0){
print(names(col.var))
if(!is.numeric(col.var))
return(NA)
"Min"<-min(col.var, na.rm=TRUE)
"Max"<-max(col.var, na.rm=TRUE)
if (nonnormal == 0){
"mean"<-round(mean(col.var, na.rm = T), digits = digits.opt)
"sd"<-round(sd(col.var, na.rm = T), digits = digits.opt)
tmp_mat<-c(var = colnames(data)[i],
"Total"=gsub(" ", "", paste(mean, "(",  sd,")")), "Min-Max"=paste(Min, Max, sep="-"))
}
print(tmp_mat)
return(tmp_mat)
}
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F)))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F), use.names = T))
return(res)
# }
}
a<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
ft_runquanti_tab<-function(data, group, digits.opt, nonnormal){
# if(is.null(group))
#   return(ft_tab_quanti_null())
# else{
res<-data.frame(unlist(by(data[,"Age"], data[,group], ft_tab_quanti, simplify = F), use.names = F))
return(res)
# }
}
b<-ft_runquanti_tab(bdd, group = "Sexe", digits.opt, nonnormal)
View(b)
